<script setup lang="ts">
// =============================================================================
// インポート（ライブラリ）
// =============================================================================
// import { ref } from 'vue'

// =============================================================================
// インポート（自作モジュール）
// =============================================================================
// import { AuthService } from "~/services/AuthService";

// =============================================================================
// セットアップ
// =============================================================================
// const router = useRouter();

// =============================================================================
// State
// =============================================================================
// const isModalOpen = ref<boolean>(false)

// =============================================================================
// 関数
// =============================================================================
// /**
//  * 入力値をスキーマで検証し、エラーがあれば errors にセットする。
//  *
//  * @returns {boolean} バリデーション成功なら true、失敗なら false
//  */
// const validateForm = (): boolean => {
//   const result = loginSchema.safeParse({
//     email: email.value,
//     password: password.value
//   });

//   if (!result.success) {
//     errors.value = {};
//     for (const issue of result.error.issues) {
//       errors.value[issue.path[0]] = issue.message;
//     }
//     return false;
//   }

//   errors.value = {};
//   return true;
// };

// =============================================================================
// イベントハンドラ
// =============================================================================
// 〇〇Eventで関数名を作成

// =============================================================================
// ライフサイクルフック
// =============================================================================
</script>

<template>
  <div></div>
</template>

<style lang="scss" scoped></style>